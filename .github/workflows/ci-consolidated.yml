name: CI

on:
  push:
    branches:
      - main
      - "release/**"
      - "feature/**"
      - "fix/**"
      - "refactor/**"
  pull_request:
    branches:
      - main
      - "release/**"
  workflow_dispatch:

env:
  HOMEBREW_NO_AUTO_UPDATE: 1

jobs:
  # Quick validation that runs on all platforms
  validate:
    name: Validate (${{ matrix.os }}, Node ${{ matrix.node }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [20.x]
        include:
          # Additional Node versions only on Ubuntu for faster CI
          - os: ubuntu-latest
            node: 22.x
          - os: ubuntu-latest
            node: 24.x
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run type-check

      - name: Lint
        run: pnpm run lint
        continue-on-error: ${{ matrix.os == 'windows-latest' }}

      - name: Format check
        run: pnpm run format:check
        continue-on-error: ${{ matrix.os == 'windows-latest' }}

      - name: Run tests
        run: pnpm test

      - name: Build
        run: pnpm run build

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.node == '20.x'
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 7

  # Advanced tests only run on macOS where they're most relevant
  advanced-tests:
    name: Advanced Tests (Node ${{ matrix.node }})
    runs-on: macos-latest
    needs: validate
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        node: [20.x, 22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build first
        run: pnpm run build

      - name: Run binary cookies test
        run: pnpm exec tsx scripts/test-binarycookies.ts
        continue-on-error: true

      - name: Run decoder test
        run: pnpm exec tsx scripts/test-decoder.ts
        continue-on-error: true

      - name: Validate cookie structure
        run: pnpm exec tsx scripts/validate-cookie-structure.ts
        continue-on-error: true

  # Platform-specific integration tests with real browsers
  integration-tests:
    name: Integration Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        node: [20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Install Chrome (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install chromium -y
          Start-Sleep -Seconds 10
        shell: pwsh

      - name: Generate test cookies (Windows)
        if: runner.os == 'Windows'
        run: |
          $chromeDir = "$env:LOCALAPPDATA\Google\Chrome\User Data\Default"
          New-Item -ItemType Directory -Force -Path $chromeDir
          
          $chromiumPath = "C:\Program Files\Chromium\Application\chrome.exe"
          if (Test-Path $chromiumPath) {
            & "$chromiumPath" --headless --disable-gpu --no-sandbox --user-data-dir="$env:LOCALAPPDATA\Google\Chrome\User Data" "https://github.com" --timeout=15000
            Start-Sleep -Seconds 5
          }
        shell: pwsh
        continue-on-error: true

      - name: Test CLI (All platforms)
        run: |
          node dist/cli.cjs --help
          node dist/cli.cjs --browser chrome "*" github.com || true
        shell: bash

  # Documentation build - only when needed
  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check documentation links
        run: pnpm run check-links

      - name: Build documentation
        run: pnpm run docs

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/.vitepress/dist/
          retention-days: 7

  # Final status check for branch protection
  status-check:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [validate, docs]
    if: always()
    steps:
      - name: Check status
        run: |
          if [[ "${{ needs.validate.result }}" != "success" || "${{ needs.docs.result }}" != "success" ]]; then
            echo "Required checks failed"
            exit 1
          fi
          echo "All required checks passed"